{"version":3,"sources":["redux/phonebook/phonebook-operations.js","redux/auth/auth-selectors.js","components/PrivateRouter.js","components/PublicRouter.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/App/AppBar.js","components/App/App.js","redux/phonebook/phonebook-reducers.js","redux/auth/auth-slice.js","redux/store.js","index.jsx","redux/auth/auth-operations.js","components/Navigation/Navigation.module.css","redux/phonebook/phonebook-actions.js","components/App/App.module.css"],"names":["fetchContactsAction","createAsyncThunk","a","axios","get","console","log","message","addContactAction","contact","post","deleteContactAction","id","delete","authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","getIsFetching","isFetching","PrivateRoute","component","redirectTo","children","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","Navigation","Navbar","Nav","exact","className","styles","link","activeClassName","activeLink","AuthNav","UserMenu","dispatch","useDispatch","type","onClick","logOut","AppBar","AsyncHomeView","lazy","AsyncLoginView","AsyncRegisterView","AsyncContactsView","App","useEffect","fetchCurrentUser","fallback","color","height","width","loader","path","entities","createReducer","fulfilled","_state","action","payload","data","filter","isLoading","pending","rejected","error","changeFilter","combineReducers","authSlice","createSlice","initialState","email","token","extraReducers","register","logIn","_action","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","defaults","baseURL","headers","common","Authorization","credentials","rejectWithValue","_","thunkAPI","getState","persistedToken","module","exports","createAction"],"mappings":"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","file":"static/js/main.83a74020.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchContactsAction = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    try {\n      return await axios.get('/contacts');\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n\nexport const addContactAction = createAsyncThunk(\n  'contacts/addContacts',\n  async contact => {\n    try {\n      return await axios.post('/contacts', contact);\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n\nexport const deleteContactAction = createAsyncThunk(\n  'contacts/deleteContacts',\n  async id => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getUserName = state => state.auth.user.name;\nconst getIsFetching = state => state.auth.isFetching;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getIsFetching,\n};\n\nexport default authSelectors;\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function PrivateRoute({\n  component: Component,\n  redirectTo = '/',\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function PublicRoute({\n  restricted = false,\n  redirectTo = '/',\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.css';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Navbar>\n      <Nav>\n        <NavLink\n          exact\n          to=\"/\"\n          className={styles.link}\n          activeClassName={styles.activeLink}\n        >\n          Main page\n        </NavLink>\n        {isLoggedIn && (\n          <NavLink\n            to=\"/contacts\"\n            className={styles.link}\n            activeClassName={styles.activeLink}\n          >\n            Contacts\n          </NavLink>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport styles from '../Navigation/Navigation.module.css';\n\nexport default function AuthNav() {\n  return (\n    <Navbar>\n      <Nav>\n        <NavLink\n          to=\"/register\"\n          className={styles.link}\n          activeClassName={styles.activeLink}\n        >\n          Registration\n        </NavLink>\n        <NavLink\n          to=\"/login\"\n          className={styles.link}\n          activeClassName={styles.activeLink}\n        >\n          Enter\n        </NavLink>\n      </Nav>\n    </Navbar>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Navbar } from 'react-bootstrap';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport { logOut } from '../../redux/auth/auth-operations';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <Navbar>\n      <p className=\"greetings\">Hi, {name},how are you today? </p>\n      <button\n        className=\"btn-logout\"\n        type=\"button\"\n        onClick={() => dispatch(logOut())}\n      >\n        Log off\n      </button>\n    </Navbar>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Navbar } from 'react-bootstrap';\nimport Navigation from '../Navigation/Navigation';\nimport AuthNav from '../AuthNav/AuthNav';\nimport UserMenu from '../UserMenu/UserMenu';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Navbar>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </Navbar>\n  );\n}\n","import { useEffect, lazy, Suspense } from 'react';\nimport { Switch } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport PrivateRoute from '../PrivateRouter';\nimport PublicRoute from '../PublicRouter';\nimport AppBar from './AppBar';\nimport { fetchCurrentUser } from '../../redux/auth/auth-operations';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport styles from './App.module.css';\n\nconst AsyncHomeView = lazy(() =>\n  import('../../views/HomeView' /* webpackChunkName: \"home-page\"*/),\n);\nconst AsyncLoginView = lazy(() =>\n  import('../../views/LoginView' /* webpackChunkName: \"login-page\"*/),\n);\nconst AsyncRegisterView = lazy(() =>\n  import('../../views/RegisterView' /* webpackChunkName: \"register-page\"*/),\n);\nconst AsyncContactsView = lazy(() =>\n  import('../../views/ContactsView' /* webpackChunkName: \"contacts-page\"*/),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(authSelectors.getIsFetching);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return !isFetching ? (\n    <div>\n      <AppBar />\n\n      <Suspense\n        fallback={\n          <Loader\n            type=\"Hearts\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            className={styles.loader}\n          />\n        }\n      >\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <AsyncHomeView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/register\" redirectTo=\"/contacts\" restricted>\n            <AsyncRegisterView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <AsyncLoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <AsyncContactsView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </div>\n  ) : null;\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './phonebook-actions';\nimport {\n  fetchContactsAction,\n  addContactAction,\n  deleteContactAction,\n} from './phonebook-operations';\n\nconst entities = createReducer([], {\n  [fetchContactsAction.fulfilled]: (_state, action) => action.payload.data,\n  [addContactAction.fulfilled]: (state, { payload }) => [\n    payload.data,\n    ...state,\n  ],\n  [deleteContactAction.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsAction.pending]: () => true,\n  [fetchContactsAction.fulfilled]: () => false,\n  [fetchContactsAction.rejected]: () => false,\n  [deleteContactAction.fulfilled]: () => false,\n  [deleteContactAction.pending]: () => true,\n  [deleteContactAction.rejected]: () => false,\n  [addContactAction.fulfilled]: () => false,\n  [addContactAction.pending]: () => true,\n  [addContactAction.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsAction.rejected]: (_state, action) => action.payload,\n  [fetchContactsAction.pending]: () => null,\n  [addContactAction.pending]: () => null,\n  [addContactAction.rejected]: (_state, action) => action.payload,\n  [deleteContactAction.pending]: () => null,\n  [deleteContactAction.rejected]: (_state, action) => action.payload,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_state, { payload }) => payload,\n});\n\nexport default combineReducers({ entities, isLoading, error, filter });\n","import { createSlice } from '@reduxjs/toolkit';\nimport { register, logIn, logOut, fetchCurrentUser } from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetching: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state, _action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [fetchCurrentUser.pending](state) {\n      state.isFetching = true;\n    },\n    [fetchCurrentUser.fulfilled](state, { payload }) {\n      state.user = payload;\n      state.isLoggedIn = true;\n      state.isFetching = false;\n    },\n    [fetchCurrentUser.rejected](state) {\n      state.isFetching = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducers';\nimport authReducer from './auth/auth-slice';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    phonebook: phonebookReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../src/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nexport const logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.data);\n    }\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__115nY\",\"link\":\"Navigation_link__2ybit\",\"activeLink\":\"Navigation_activeLink__3Z45b Navigation_link__2ybit\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"App_loader__joYGQ\"};"],"sourceRoot":""}